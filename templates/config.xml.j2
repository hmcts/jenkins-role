<?xml version='1.0' encoding='UTF-8'?>
<hudson>
  <disabledAdministrativeMonitors>
    <string>jenkins.security.s2m.MasterKillSwitchWarning</string>
    <string>GitHubHookRegisterProblemMonitor</string>
    <string>OldData</string>
    <string>jenkins.CLI</string>
    <string>hudson.node_monitors.MonitorMarkedNodeOffline</string>
  </disabledAdministrativeMonitors>
  <version>{{ jenkins_version }}</version>
  <numExecutors>{{ jenkins_master_executors }}</numExecutors>
  <mode>NORMAL</mode>

  {% if jenkins_enable_security %}
  <useSecurity>true</useSecurity>
  {% if jenkins_logged_in_full_control is defined and jenkins_logged_in_full_control %}
    <authorizationStrategy class="hudson.security.FullControlOnceLoggedInAuthorizationStrategy">
  {% else %}
    <authorizationStrategy class="hudson.security.GlobalMatrixAuthorizationStrategy">
    {% if jenkins_permissions_list is defined %}
    {% for permission in jenkins_permissions_list %}
      <permission>{{ permission }}</permission>
    {% endfor %}
    {% endif %}
  {% endif %}
    {% if jenkins_anonymous_read is defined and jenkins_anonymous_read %}
    {# <denyAnonymousReadAccess>false</denyAnonymousReadAccess> #}
    {% else %}
    <denyAnonymousReadAccess>true</denyAnonymousReadAccess>
    {% endif %}
  </authorizationStrategy>
    {% if jenkins_ldap_config is defined %}
    <securityRealm class="hudson.security.LDAPSecurityRealm" plugin="ldap@1.15">
      <server>{{ jenkins_ldap_config.scheme }}://{{ jenkins_ldap_config.server }}:{{ jenkins_ldap_config.port }}</server>
      <rootDN>{{ jenkins_ldap_config.rootdn }}</rootDN>
      <inhibitInferRootDN>false</inhibitInferRootDN>
      <userSearchBase></userSearchBase>
      <userSearch>{{ jenkins_ldap_config.usersearch }}</userSearch>
      <groupSearchBase>ou=groups</groupSearchBase>
      <groupMembershipStrategy class="jenkins.security.plugins.ldap.FromGroupSearchLDAPGroupMembershipStrategy">
        <filter></filter>
      </groupMembershipStrategy>
      <managerDN>{{ jenkins_ldap_config.managerdn}}</managerDN>
      <managerPasswordSecret>{{ jenkins_ldap_config.managerpasswordsecret }}</managerPasswordSecret>
      <disableMailAddressResolver>false</disableMailAddressResolver>
      <displayNameAttributeName>displayname</displayNameAttributeName>
      <mailAddressAttributeName>mail</mailAddressAttributeName>
      <userIdStrategy class="jenkins.model.IdStrategy$CaseInsensitive"/>
      <groupIdStrategy class="jenkins.model.IdStrategy$CaseInsensitive"/>
      <disableRolePrefixing>false</disableRolePrefixing>
    </securityRealm>
    {% endif %}
  {% else %}
  {# No auth #}
  <useSecurity>false</useSecurity>
  <authorizationStrategy class="hudson.security.AuthorizationStrategy$Unsecured"/>
  <securityRealm class="hudson.security.SecurityRealm$None"/>
  {% endif %}

  <disableRememberMe>false</disableRememberMe>
  <projectNamingStrategy class="jenkins.model.ProjectNamingStrategy$DefaultProjectNamingStrategy"/>
  <workspaceDir>${ITEM_ROOTDIR}/workspace</workspaceDir>
  <buildsDir>${ITEM_ROOTDIR}/builds</buildsDir>
  <markupFormatter class="hudson.markup.EscapedMarkupFormatter"/>
  <jdks/>
  <viewsTabBar class="hudson.views.DefaultViewsTabBar"/>
  <myViewsTabBar class="hudson.views.DefaultMyViewsTabBar"/>
{% if jenkins_clouds_config is defined and jenkins_clouds_config|length > 0 %}
<clouds>
{% for c_cloud in jenkins_clouds_config %}
    <com.microsoft.azure.vmagent.AzureVMCloud plugin="azure-vm-agents@0.6.1">
      <name>{{ c_cloud.name }}</name>
      <cloudName>{{ c_cloud.cloud_name }}</cloudName>
      <credentialsId>{{ c_cloud.credentials_id }}</credentialsId>
      <maxVirtualMachinesLimit>{{ c_cloud.max_virtual_machines_count }}</maxVirtualMachinesLimit>
      <resourceGroupReferenceType>existing</resourceGroupReferenceType>
      <newResourceGroupName></newResourceGroupName>
      <existingResourceGroupName>{{ c_cloud.existing_resource_group_name }}</existingResourceGroupName>
{% if c_cloud.vm_templates|length > 0 %}
      <vmTemplates>
{% for c_template in c_cloud.vm_templates %}
        <com.microsoft.azure.vmagent.AzureVMAgentTemplate>
          <templateName>{{ c_template.name }}</templateName>
          <templateDesc>{{ c_template.description }}</templateDesc>
          <labels>{{ c_template.labels }}</labels>
          <location>{{ c_template.location }}</location>
          <virtualMachineSize>{{ c_template.virtual_machine_size }}</virtualMachineSize>
          <storageAccountNameReferenceType>existing</storageAccountNameReferenceType>
          <diskType>managed</diskType>
          <newStorageAccountName>jnawdkbzockbndfld4c2xvkg</newStorageAccountName>
          <existingStorageAccountName>{{ c_template.existing_storage_account_name }}</existingStorageAccountName>
          <storageAccountType>Standard_LRS</storageAccountType>
          <noOfParallelJobs>{{ c_template.no_of_parallel_jobs }}</noOfParallelJobs>
          <usageMode>{{ c_template.usage_mode }}</usageMode>
          <shutdownOnIdle>{{ c_template.shutdown_on_idle }}</shutdownOnIdle>
          <imageTopLevelType>{{ c_template.image_top_level_type }}</imageTopLevelType>
          <imageReferenceType>{{ c_template.image_reference_type }}</imageReferenceType>
          <builtInImage>Ubuntu 16.04 LTS</builtInImage>
          <isInstallGit>false</isInstallGit>
          <isInstallMaven>false</isInstallMaven>
          <isInstallDocker>false</isInstallDocker>
{% if c_template.image_reference_type == 'reference' %}
          <imagePublisher>{{ c_template.image_publisher }}</imagePublisher>
          <imageOffer>{{ c_template.image_offer }}</imageOffer>
          <imageSku>{{ c_template.image_sku }}</imageSku>
          <imageVersion>{{ c_template.image_version }}</imageVersion>
{% elif c_template.image_reference_type == 'custom' %}
          <image>{{ c_template.image_url }}</image>
{% endif %}
          <osType>Linux</osType>
          <agentLaunchMethod>SSH</agentLaunchMethod>
          <preInstallSsh>{{ c_template.pre_install_ssh }}</preInstallSsh>
          <initScript>{{ c_template.init_script }}</initScript>
          <credentialsId>{{ c_template.credentials_id }}</credentialsId>
          <agentWorkspace>{{ c_template.agent_workspace|default('/var/lib/jenkins') }}</agentWorkspace>
          <retentionTimeInMin>0</retentionTimeInMin>
          <virtualNetworkName>{{ c_template.virtual_network_name }}</virtualNetworkName>
          <virtualNetworkResourceGroupName></virtualNetworkResourceGroupName>
          <subnetName>{{ c_template.subnet_name }}</subnetName>
          <usePrivateIP>true</usePrivateIP>
          <nsgName>{{ c_template.nsg_name|default('') }}</nsgName>
          <jvmOptions>{{ c_template.jvm_options }}</jvmOptions>
          <templateDisabled>{{ c_template.template_disabled }}</templateDisabled>
          <templateStatusDetails></templateStatusDetails>
          <templateVerified>false</templateVerified>
          <executeInitScriptAsRoot>{{ c_template.execute_init_script_as_root }}</executeInitScriptAsRoot>
          <doNotUseMachineIfInitFails>{{ c_template.do_not_use_machine_if_init_script_fails }}</doNotUseMachineIfInitFails>
          <retentionStrategy class="com.microsoft.azure.vmagent.AzureVMCloudRetensionStrategy">
            <idleTerminationMillis>{{ c_template.retention_time_in_mins|default("60")|int * 60 * 1000 }}</idleTerminationMillis>
            <idleTerminationMinutes>{{ c_template.retention_time_in_mins|default("60") }}</idleTerminationMinutes>
          </retentionStrategy>
        </com.microsoft.azure.vmagent.AzureVMAgentTemplate>
{% endfor %}
      </vmTemplates>
{% endif %}
      <deploymentTimeout>1800</deploymentTimeout>
      <approximateVirtualMachineCount>0</approximateVirtualMachineCount>
    </com.microsoft.azure.vmagent.AzureVMCloud>
{% endfor %}
  </clouds>
{% else %}
  <clouds/>
{% endif %}
  <quietPeriod>5</quietPeriod>
  <scmCheckoutRetryCount>0</scmCheckoutRetryCount>
  <views>
    <hudson.model.AllView>
      <owner class="hudson" reference="../../.."/>
      <name>all</name>
      <filterExecutors>false</filterExecutors>
      <filterQueue>false</filterQueue>
      <properties class="hudson.model.View$PropertyList"/>
    </hudson.model.AllView>
    {% if jenkins_job_list_views is defined %}
      {% for listview in jenkins_job_list_views %}
      <listView>
        <owner class="hudson" reference="../../.."/>
        <name>{{ listview.name }}</name>
        <filterExecutors>false</filterExecutors>
        <filterQueue>false</filterQueue>
        <properties class="hudson.model.View$PropertyList"/>
        <jobNames>
          <comparator class="hudson.util.CaseInsensitiveComparator"/>
        </jobNames>
        <jobFilters/>
        <columns>
          <hudson.views.StatusColumn/>
          <hudson.views.WeatherColumn/>
          <hudson.views.JobColumn/>
          <hudson.views.LastSuccessColumn/>
          <hudson.views.LastFailureColumn/>
          <hudson.views.LastDurationColumn/>
          <hudson.views.BuildButtonColumn/>
        </columns>
        <includeRegex>{{ listview.regex}}</includeRegex>
        <recurse>false</recurse>
      </listView>
      {% endfor %}
    {% endif %}

    {% if jenkins_build_monitor_views is defined %}
    {% for buildmonitor in jenkins_build_monitor_views %}
    <com.smartcodeltd.jenkinsci.plugins.buildmonitor.BuildMonitorView plugin="build-monitor-plugin@1.12+build.201704111018">
      <owner class="hudson" reference="../../.."/>
      <name>{{ buildmonitor.name }}</name>
      <filterExecutors>false</filterExecutors>
      <filterQueue>false</filterQueue>
      <properties class="hudson.model.View$PropertyList"/>
      {% if buildmonitor.jobs is defined %}
      <jobNames>
        <comparator class="hudson.util.CaseInsensitiveComparator" reference="../../../listView/jobNames/comparator"/>
        {% for job in buildmonitor.jobs %}
        <string>{{ job }}</string>
        {% endfor %}
      </jobNames>
      {% endif %}
      <jobFilters/>
      <columns/>
      {% if buildmonitor.regex is defined %}
      <includeRegex>{{ buildmonitor.regex }}</includeRegex>
      {% endif %}
      <recurse>true</recurse>
      <statusFilter>true</statusFilter>
      <title>{{ buildmonitor.title }}</title>
      <config>
        <displayCommitters>true</displayCommitters>
        <order class="com.smartcodeltd.jenkinsci.plugins.buildmonitor.order.ByLastBuildTime"/>
      </config>
    </com.smartcodeltd.jenkinsci.plugins.buildmonitor.BuildMonitorView>
    {% endfor %}
    {% endif %}

  </views>
  <primaryView>all</primaryView>
  <slaveAgentPort>3698</slaveAgentPort>
  <disabledAgentProtocols>
  {% for protocol in jenkins_jnlp_disabled_protocols %}
  <string>{{ protocol }}</string>
  {% endfor %}
  </disabledAgentProtocols>
  {% if jenkins_master_labels is defined %}
  <label>{{ jenkins_master_labels | join(' ') }}</label>
  {% else %}
  <label></label>
  {% endif %}
  <nodeProperties/>
  <globalNodeProperties>
    {% if jenkins_environment_variables is defined %}
    <hudson.slaves.EnvironmentVariablesNodeProperty>
      <envVars serialization="custom">
        <unserializable-parents/>
        <tree-map>
          <default>
            <comparator class="hudson.util.CaseInsensitiveComparator"/>
          </default>
          <int>{{ jenkins_environment_variables | length }}</int>
          {% for variable in jenkins_environment_variables %}
          <string>{{ variable.key }}</string>
          <string>{{ variable.value }}</string>
          {% endfor %}
        </tree-map>
      </envVars>
    </hudson.slaves.EnvironmentVariablesNodeProperty>
    {% endif %}
  </globalNodeProperties>
</hudson>
